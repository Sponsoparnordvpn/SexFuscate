return (function(...) do local sex = 'This file was sexified by SexFuscator | 1.0.0' end do local w90 = buffer.readu8;local u99 = buffer.writestring;local y129 = tostring;local e106 = buffer.readstring;local c121 = bit32.btest;local l93 = buffer.fromstring;local j67 = math.log10;local r = string.len;local a167 = table.insert;local v146 = pairs;local f183 = coroutine.isyieldable;local t136 = assert;local f138 = tonumber;local l119 = bit32.lshift;local a = string.unpack;local g71 = math.clamp;local d116 = bit32.rshift;local h77 = math.randomseed;local p102 = buffer.readi16;local a85 = buffer.readu32;local g = string.reverse;local k92 = buffer.writeu16;local z156 = loadstring;local q = string.pack;local v163 = table.freeze;local g87 = buffer.readi8;local k164 = table.clear;local w22 = string.byte;local e89 = buffer.copy;local d108 = bit32.band;local d74 = math.min;local q143 = print;local r72 = math.sinh;local c70 = math.abs;local g104 = buffer.len;local r111 = bit32.bor;local p110 = bit32.byteswap;local b114 = bit32.bxor;local f180 = coroutine.status;local t = string.rep;local r161 = table.sort;local l184 = ipairs;local s = string.sub;local k112 = bit32.bnot;local b56 = math.frexp;local i178 = coroutine.yield;local q124 = debug.info;local d171 = table.concat;local d73 = math.asin;local w = string.gmatch;local o51 = math.ldexp;local m117 = bit32.rrotate;local t144 = pcall;local q173 = table.find;local h145 = type;local k176 = coroutine.resume;local a109 = bit32.extract;local f100 = buffer.writei8;local x29 = os.clock;local o62 = math.pow;local v86 = buffer.tostring;local x174 = table.remove;local l76 = math.fmod;local o101 = buffer.writef32;local q68 = math.sign;local p58 = math.floor;local k133 = getfenv;local o160 = table.foreach;local d91 = buffer.writei16;local y179 = coroutine.close;local y137 = rawlen;local d118 = bit32.replace;local l = string.split;local q30 = os.difftime;local w61 = math.modf;local k = math.rad;local k107 = buffer.readf32;local z168 = table.create;local f159 = table.foreachi;local l10 = string.match;local l96 = buffer.writeu32;local n79 = math.ceil;local f = buffer.create;local u80 = math.sin;local c122 = bit32.countlz;local d158 = table.getn;local y = string.packsize;local h182 = coroutine.create;local c = string.char;local b128 = xpcall;local j84 = buffer.readf64;local h181 = coroutine.wrap;local d60 = math.sqrt;local h177 = coroutine.running;local g172 = table.clone;local j170 = table.isfrozen;local n45 = utf8.codes;local c169 = table.maxn;local v131 = typeof;local n166 = table.move;local i165 = table.pack;local b132 = require;local j130 = gcinfo;local f162 = table.unpack;local m = math.random;local h134 = setmetatable;local y135 = next;local h186 = newproxy;local w50 = math.log;local z95 = buffer.fill;local e65 = math.cos;local i63 = math.atan;local y48 = utf8.char;local n139 = rawequal;local t88 = buffer.readu16;local c78 = math.atan2;local p = math.round;local l141 = getmetatable;local b47 = utf8.len;local p157 = unpack;local j120 = bit32.lrotate;local v = utf8.codepoint;local w105 = buffer.writei32;local h15 = string.lower;local h = string.gsub;local d = os.time;local z = string.upper;local j103 = buffer.writef64;local v125 = debug.traceback;local w53 = math.cosh;local x = string.format;local x66 = math.noise;local z115 = bit32.arshift;local j97 = buffer.writeu8;local n113 = bit32.countrz;local u = string.find;local y59 = math.max;local j = utf8.offset;local n69 = math.acos;local i147 = select;local m57 = math.tanh;local z94 = buffer.readi32;local g155 = rawget;local i140 = collectgarbage;local g64 = math.tan;local z81 = math.exp;local m175 = setfenv;local e75 = math.deg;local e142 = rawset;local f185 = error;local b32 = os.date;local q191 = buffer;local j193 = debug;local q194 = _G;local e189 = utf8;local n188 = os;local k195 = table;local e190 = math;local w187 = string;local o196 = coroutine;local r192 = bit32;local _SEX1IIIIllIlll1lII={"\204\128","\204\130","\204\131","\204\132","\204\134","\204\136","\204\137","\204\138","\204\139","\204\140","\204\141","\204\142","\204\143","\204\145","\204\147","\204\148","\204\149","\204\150","\204\151","\204\152","\204\153","\204\154","\204\155","\204\156","\204\157","\204\158","\204\159","\204\160","\204\162","\204\163","\204\164","\204\165","\204\167","\204\168","\204\169","\204\170","\204\171","\204\172","\204\173","\204\174","\204\175","\204\176","\204\178","\204\179","\204\180","\204\181","\204\182","\204\183","\204\184","\204\185","\204\186","\204\187","\204\188","\204\189","\204\190","\204\191","\205\128","\205\130","\205\131","\205\132","\205\133","\205\135","\205\136","\205\137","\205\138","\205\139","\205\140","\205\141","\205\142","\205\143","\205\144","\205\145","\205\146","\205\147","\205\148","\205\149","\205\150","\205\151","\205\152","\205\153","\205\154","\205\155","\205\156","\205\157","\205\158","\205\159","\205\160","\205\161","\205\162","\205\163","\205\164","\205\165","\205\166","\205\167","\205\168","\205\169","\205\170","\205\171","\205\172","\205\173","\205\174","\205\175","\205\176","\205\177","\205\178","\205\179","\205\180","\205\181","\205\182","\205\183","\205\184","\205\185","\205\186","\205\187","\205\188","\205\189","\205\190","\205\191"}local function _SEX11I1l1IIIl111ll(_SEXI11I1llII1llI1l)local _SEXlIlI11II1IIlIIl="" for i=1,#_SEXI11I1llII1llI1l do local _SEX1ll1lI111llllI1=_SEXI11I1llII1llI1l:sub(i,i)_SEXlIlI11II1IIlIIl=_SEXlIlI11II1IIlIIl .. _SEX1ll1lI111llllI1 for j=1,math.random(1,8)do _SEXlIlI11II1IIlIIl=_SEXlIlI11II1IIlIIl .. _SEX1IIIIllIlll1lII[math.random(1,#_SEX1IIIIllIlll1lII)] end for j=1,math.random(1,8)do _SEXlIlI11II1IIlIIl=_SEXlIlI11II1IIlIIl .. _SEX1IIIIllIlll1lII[math.random(1,#_SEX1IIIIllIlll1lII)] end end return _SEXlIlI11II1IIlIIl end local function _SEXIIlll1III11IlII(_SEXlII1II111I11ll1)local _SEXIl1111l1IIll111="" for i=1,#_SEXlII1II111I11ll1 do local _SEXIlIIl11IllI1IlI=_SEXlII1II111I11ll1:sub(i,i)if utf8.len(_SEXIlIIl11IllI1IlI)==1 then _SEXIl1111l1IIll111=_SEXIl1111l1IIll111 .. _SEXIlIIl11IllI1IlI end end return _SEXIl1111l1IIll111 end;q143(#_G);end do end end)({{{}, {}, {}}})