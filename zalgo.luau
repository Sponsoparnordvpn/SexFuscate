return(function(...) do local sex = 'This file was sexified by SexFuscator | 1.0.0' end do local _SEXI11111IIII1IlI1 = buffer.readu8;local _SEXllI1l1l1lII1ll1 = buffer.writestring;local _SEXlll1ll1l111lllI = tostring;local _SEXIIlll11II11IlI1 = buffer.readstring;local _SEX11IllII11I1ll1I = bit32.btest;local _SEX1Ill1ll1l111111 = buffer.fromstring;local _SEXl1ll1I1l1llll1I = math.log10;local _SEXI1III11IIlI1llI = string.len;local _SEX1lI1IIII1lIlIl1 = table.insert;local _SEXIlIIlIllIlIllll = pairs;local _SEX111IlIIl11ll1II = coroutine.isyieldable;local _SEX1llIllI111lll11 = assert;local _SEX1l111I11l1ll1l1 = tonumber;local _SEXl11l1IIIlII1ll1 = bit32.lshift;local _SEX1lII1Il1II1Il11 = string.unpack;local _SEX11l1llIl111I111 = math.clamp;local _SEXlllIlIllI1lIIII = bit32.rshift;local _SEX1I1I1lIll11I1l1 = math.randomseed;local _SEXl1III1llllII1Il = buffer.readi16;local _SEX1IlIIl1Ill11l1l = buffer.readu32;local _SEXl1l1I1lllI11III = string.reverse;local _SEXIll1IlIl1II111I = buffer.writeu16;local _SEX1I1l11llI1I1llI = loadstring;local _SEX1III1Il1lIIlI1l = string.pack;local _SEXIl1IIl1llllIIll = table.freeze;local _SEXl1I1lIlIl1ll1II = buffer.readi8;local _SEXI11111IIllI1III = table.clear;local _SEXIIl1l1lIIIIlIIl = string.byte;local _SEXl1lI1I1lII11lIl = buffer.copy;local _SEX1I1IIll1111lII1 = bit32.band;local _SEXI1l1Il11IIl1lIl = math.min;local _SEX11IlIlI1lIlll1l = print;local _SEX1lIl1l11I1l111l = math.sinh;local _SEX1lIlIIIIlII111I = math.abs;local _SEXllIIllI1lIll1I1 = buffer.len;local _SEXlIlII1I111lII1I = bit32.bor;local _SEXlIIIllIllI1l1II = bit32.byteswap;local _SEXlIIl1l1lIlIlI1l = bit32.bxor;local _SEXI1lII1l1IIIlI11 = coroutine.status;local _SEXllllIllIIllII1I = string.rep;local _SEX1IIl1I1II11l1l1 = table.sort;local _SEXlIlIIl1lII1l1l1 = ipairs;local _SEX1II1l11IlI1lIII = string.sub;local _SEX1ll1llIllI1Il1l = bit32.bnot;local _SEX11IIII111l1II1I = math.frexp;local _SEXl1IlI1Illll1lI1 = coroutine.yield;local _SEXllllIl111lllllI = debug.info;local _SEX1I1I1l1lIlII1I1 = table.concat;local _SEX1I1III111111l1l = math.asin;local _SEX11lIIlII11lIIll = string.gmatch;local _SEXIll1IlIIIlIll1l = math.ldexp;local _SEX1IIlllIIII1IIl1 = bit32.rrotate;local _SEXIIlll1ll1II111I = pcall;local _SEX1Ill1I1111lII1l = table.find;local _SEXIl1IIIl1III1III = type;local _SEXl1Il1II1111II11 = coroutine.resume;local _SEXllI1IIll1l1I11I = bit32.extract;local _SEXlI1l1l11lII1III = buffer.writei8;local _SEX111lIlI11I1l1I1 = os.clock;local _SEXII11IlllII111lI = math.pow;local _SEXIlII1I1IIll11Il = buffer.tostring;local _SEXlIII1I1lIIll1Il = table.remove;local _SEXIIIII1Il1l1Il11 = math.fmod;local _SEXI1lllll1lll1llI = buffer.writef32;local _SEXIll1ll1I1lIlIIl = math.sign;local _SEXII1Il111I111llI = math.floor;local _SEXIl1IIlIllllll1I = getfenv;local _SEXlII1ll111lI111I = table.foreach;local _SEXI11II1llII1IlIl = buffer.writei16;local _SEX1lIlIlIIl1IIIII = coroutine.close;local _SEX1II1lI1IlIl11l1 = rawlen;local _SEXIl1IlIll1IlIIII = bit32.replace;local _SEXIIIIlll1IlI1lI1 = string.split;local _SEXIlIlIIl1llI1llI = os.difftime;local _SEXIll11llllIIIlll = math.modf;local _SEXI1l1lll11Il1Ill = math.rad;local _SEXI11I1Il1Il1ll1l = buffer.readf32;local _SEXlll1lI1ll11llI1 = table.create;local _SEX1II11lII11III1I = table.foreachi;local _SEXII1IIl11l1III11 = string.match;local _SEXll1I1l1lI11Illl = buffer.writeu32;local _SEXl1II111I1l1lIII = math.ceil;local _SEXlIlIl1l111I11I1 = buffer.create;local _SEXlIlIIII11111Ill = math.sin;local _SEX11l1l1IIIlII1l1 = bit32.countlz;local _SEXl1lllI1lIIl1Il1 = table.getn;local _SEXll1lI1Ill1llIlI = string.packsize;local _SEX1lIl1llIl1l1I11 = coroutine.create;local _SEXIIIl1IlllIIll1l = string.char;local _SEX11Il1I11llI1II1 = xpcall;local _SEXl1lllIlI11ll11I = buffer.readf64;local _SEXIII1Il1IIl1II1I = coroutine.wrap;local _SEXlIl1llI1ll1lIl1 = math.sqrt;local _SEXllI1IIIlII1IlII = coroutine.running;local _SEXl11I11IIl11III1 = table.clone;local _SEXlI11l1111IIlI1l = table.isfrozen;local _SEXI1I1l11lIIll1l1 = utf8.codes;local _SEXIlllll11I11l111 = table.maxn;local _SEXlI1111lI1lII11I = typeof;local _SEXl1I1lIIII111III = table.move;local _SEXlII11lII11lIlIl = table.pack;local _SEXIIIIIlI1lI1lI11 = require;local _SEX1IIIl11Il1IIIIl = gcinfo;local _SEXI1lIIlllI1lll11 = table.unpack;local _SEXl1lI1llIll1llIl = math.random;local _SEXlll111lIl11II1l = setmetatable;local _SEX1I1ll1I1l1IIII1 = next;local _SEXl1lI111l1I11lI1 = newproxy;local _SEX1IIIl1IllIIII1l = math.log;local _SEXl1l1IIl1I1lIIl1 = buffer.fill;local _SEX1I1I111IlllIl1I = math.cos;local _SEXl1IlI1lIIlI1l11 = math.atan;local _SEX1Il1lIlII1l11l1 = utf8.char;local _SEXl1l1ll1IllllIIl = rawequal;local _SEXllI1lIllI1llI11 = buffer.readu16;local _SEXIl111Il1l1l1l1I = math.atan2;local _SEXI1ll111I1l111lI = math.round;local _SEXlIllll1l1I1IIll = getmetatable;local _SEXlI1l11lIII1l1Il = utf8.len;local _SEXIIIIl1111IIII11 = unpack;local _SEX1I1l11II11l1I1I = bit32.lrotate;local _SEX1II11lII1lIl1lI = utf8.codepoint;local _SEX1IlIlIl1I111lII = buffer.writei32;local _SEXIll11l11Il1Illl = string.lower;local _SEX1Illl11IIlI1IlI = string.gsub;local _SEX11ll1I11lI1II11 = os.time;local _SEXI1IIIII1l1IIll1 = string.upper;local _SEX1IlI11I1I11l1Il = buffer.writef64;local _SEXl1l1IIlllIl1ll1 = debug.traceback;local _SEX1I1lIl1lI1I11ll = math.cosh;local _SEXllI1l11I1lI1lll = string.format;local _SEXI1llI1IIllIlI11 = math.noise;local _SEX11IlIllllIlI1l1 = bit32.arshift;local _SEXlIll1IlllllIl11 = buffer.writeu8;local _SEXl1lllIII1l11l1l = bit32.countrz;local _SEXlIIlIIIIl1IlI11 = string.find;local _SEXIII1II1l1lll1ll = math.max;local _SEXIlI11lI1111ll1I = utf8.offset;local _SEX1IIlIl1ll11l11I = math.acos;local _SEX11III11I1lI1lII = select;local _SEX1lIl11lIIIlllIl = math.tanh;local _SEX1IlllIII11l11Il = buffer.readi32;local _SEXl1lIlIl1111l1lI = rawget;local _SEX1lIllI11llI1I1l = collectgarbage;local _SEXlIIIl1ll1I1l1Il = math.tan;local _SEXll1l1Illl1lI1Il = math.exp;local _SEXI1IlIIIl11ll1l1 = setfenv;local _SEXII111llI11IlIll = math.deg;local _SEXllIlllI1Ill1lll = rawset;local _SEXI1llIIIlIlI11l1 = error;local _SEXlll1lIl1lIlIII1 = os.date;local _SEX1Il11llIl1llI1l = buffer;local _SEX1I1l1II1III1I1l = debug;local _SEX11IlI1ll1lI1llI = _G;local _SEX1Il1I11Illlll1l = utf8;local _SEX11llIl1l1l1lI1l = os;local _SEXII1l11ll1IlIll1 = table;local _SEXI11IlI1Il1llllI = math;local _SEX1I1l1Il1IIIllll = string;local _SEX1I1l111I111II1l = coroutine;local _SEXII11Illl11111I1 = bit32; local _SEXlIlllI1111I11l1={"\204\128","\204\130","\204\131","\204\132","\204\134","\204\136","\204\137","\204\138","\204\139","\204\140","\204\141","\204\142","\204\143","\204\145","\204\147","\204\148","\204\149","\204\150","\204\151","\204\152","\204\153","\204\154","\204\155","\204\156","\204\157","\204\158","\204\159","\204\160","\204\162","\204\163","\204\164","\204\165","\204\167","\204\168","\204\169","\204\170","\204\171","\204\172","\204\173","\204\174","\204\175","\204\176","\204\178","\204\179","\204\180","\204\181","\204\182","\204\183","\204\184","\204\185","\204\186","\204\187","\204\188","\204\189","\204\190","\204\191","\205\128","\205\130","\205\131","\205\132","\205\133","\205\135","\205\136","\205\137","\205\138","\205\139","\205\140","\205\141","\205\142","\205\143","\205\144","\205\145","\205\146","\205\147","\205\148","\205\149","\205\150","\205\151","\205\152","\205\153","\205\154","\205\155","\205\156","\205\157","\205\158","\205\159","\205\160","\205\161","\205\162","\205\163","\205\164","\205\165","\205\166","\205\167","\205\168","\205\169","\205\170","\205\171","\205\172","\205\173","\205\174","\205\175","\205\176","\205\177","\205\178","\205\179","\205\180","\205\181","\205\182","\205\183","\205\184","\205\185","\205\186","\205\187","\205\188","\205\189","\205\190","\205\191"}local function _SEXIl11IIl1lllIIII(_SEXlIllIlllllIlIII)local _SEX1IIlII1Il1l111l="" for _SEXl1IllllIl11IlI1=1-1+1,#_SEXlIllIlllllIlIII do local _SEXlIIl11IIlIl1II1=_SEXlIllIlllllIlIII:sub(_SEXl1IllllIl11IlI1,_SEXl1IllllIl11IlI1)_SEX1IIlII1Il1l111l=_SEX1IIlII1Il1l111l .. _SEXlIIl11IIlIl1II1 for _SEXI111Ill1I1IIl1I=1-1+1,_SEXl1lI1llIll1llIl(1-1+1,_SEXII1Il111I111llI((59*8^4-66*8^3+73*8^2-24*8+72)/(59*8^3-66*8^2+73*8-24)))do _SEX1IIlII1Il1l111l=_SEX1IIlII1Il1l111l .. _SEXlIlllI1111I11l1[_SEXl1lI1llIll1llIl(1-1+1,#_SEXlIlllI1111I11l1)] end for _SEXI111Ill1I1IIl1I=1-1+1,_SEXl1lI1llIll1llIl(1-1+1,_SEXII1Il111I111llI((59*8^4-66*8^3+73*8^2-24*8+72)/(59*8^3-66*8^2+73*8-24)))do _SEX1IIlII1Il1l111l=_SEX1IIlII1Il1l111l .. _SEXlIlllI1111I11l1[_SEXl1lI1llIll1llIl(1-1+1,#_SEXlIlllI1111I11l1)] end end return _SEX1IIlII1Il1l111l end local function _SEXll1Il1II11Il1I1(_SEXI1lIlIlIll1l1Il)local _SEXIllI1Il1111lll1="" for _SEXl1IllllIl11IlI1=1-1+1,#_SEXI1lIlIlIll1l1Il do local _SEXlI1IllIlllllI1I=_SEXI1lIlIlIll1l1Il:sub(_SEXl1IllllIl11IlI1,_SEXl1IllllIl11IlI1)if utf8.len(_SEXlI1IllIlllllI1I)==1-1+1 then _SEXIllI1Il1111lll1=_SEXIllI1Il1111lll1 .. _SEXlI1IllIlllllI1I end end return _SEXIllI1Il1111lll1 end; _SEX11IlIlI1lIlll1l(_SEXll1Il1II11Il1I1([[Ȟ̖̩̹ͣͪ̕̚͠ͱ̌́̀Ͷ̩̿e̸̗͊̽̓̔ͼ̜̊̂ͣͶ̥̿̉ͷl̖͇̾̂̌lͺ̈́ȏ̳ͫͺͿ͸͔̱̬̕ͺ̪,ͻ̈̀̀̃͠͝ͺͼw̯̪̎͛͞ͳ̮͸͗̽oͷ͉͕ͮ̐r̙̮̄͟ͱ̖;l̙͏̷̮̈́͜Ͱ̯̩ͽ̔d͙͕̩ͮͮ̂ͯ̒͋ͤ̚ ͑̿͹̢̙͕͐̌͢!̗̠̟̂̀̎ͫ̅ͩ͢͡]]));end do end end)({{{}, {}, {}}})